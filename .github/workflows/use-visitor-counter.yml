name: Use Visitor Counter Logic

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  use-counter-logic:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clone github-visitor-counter repository temporarily
        run: git clone https://github.com/brown9804/github-visitor-counter.git

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies for github-visitor-counter
        run: |
          cd github-visitor-counter
          npm install

      - name: Run visitor counter logic
        run: |
          cd github-visitor-counter
          node update_repo_views_counter.js
        env:
          TRAFFIC_TOKEN: ${{ secrets.TRAFFIC_TOKEN }}
          REPO: ${{ github.repository }}

      - name: Move generated metrics.json to current repository
        run: mv github-visitor-counter/metrics.json .

      # Optional: Debug step to verify scripts and files
      - name: Debug: List files in workspace
        run: |
          ls -l
          ls -l github-visitor-counter

      - name: Update badge number in markdowns using metrics.json
        run: node github-visitor-counter/update_markdown_badge.js
        # Assumes update_markdown_badge.js will:
        #   - Read metrics.json from repo root
        #   - Update badge/counter in README.md (or all markdowns)
        #   - Not overwrite unrelated content

      - name: Clean up temporary files
        run: rm -rf github-visitor-counter

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push to PR branch
        if: github.event_name == 'pull_request'
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin
          git checkout -b ${{ github.event.pull_request.head.ref }} origin/${{ github.event.pull_request.head.ref }}
          git add "*.md" metrics.json
          git commit -m "Update visitor count" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git pull --rebase origin ${{ github.event.pull_request.head.ref }} || echo "No rebase needed"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}

      - name: Commit and push to new branch (non-PR)
        if: github.event_name != 'pull_request'
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin
          git checkout ${{ github.event.pull_request.head.ref }} || git checkout -b ${{ github.event.pull_request.head.ref }} origin/${{ github.event.pull_request.head.ref }}
          git add "*.md" metrics.json
          git commit -m "Update visitor count" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git pull --rebase origin ${{ github.event.pull_request.head.ref }} || echo "No rebase needed"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}

      - name: Create Pull Request (non-PR)
        if: github.event_name != 'pull_request'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: update-visitor-count
          title: "Update visitor count"
          body: "Automated update of visitor count"
          base: main
